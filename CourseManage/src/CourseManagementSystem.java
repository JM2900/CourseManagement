import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


public class CourseManagementSystem extends javax.swing.JFrame {

    /**
     * Creates new form CourseManagementSystem
     */
    public CourseManagementSystem() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CourseTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtCID = new javax.swing.JTextField();
        txtCName = new javax.swing.JTextField();
        txtCre = new javax.swing.JTextField();
        txtDep = new javax.swing.JTextField();
        txtIns = new javax.swing.JTextField();
        txtSched = new javax.swing.JTextField();
        txtLoc = new javax.swing.JTextField();
        txtCap = new javax.swing.JTextField();
        CLEAR = new javax.swing.JButton();
        Addbtn = new javax.swing.JButton();
        SEARCH = new javax.swing.JButton();
        UPDATE = new javax.swing.JButton();
        DELETE = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        CourseTable.setBackground(new java.awt.Color(0, 0, 0));
        CourseTable.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        CourseTable.setForeground(new java.awt.Color(255, 255, 255));
        CourseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course_ID", "Course_Name", "Credits", "Department", "Instructor", "Schedule", "Location", "Capacity"
            }
        ));
        jScrollPane1.setViewportView(CourseTable);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/aaacourse.png"))); // NOI18N
        jLabel1.setText("COURSE MANAGEMENT SYSTEM");

        jLabel2.setBackground(new java.awt.Color(153, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Course ID");

        jLabel3.setBackground(new java.awt.Color(153, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Course name");

        jLabel4.setBackground(new java.awt.Color(153, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Credits");

        jLabel5.setBackground(new java.awt.Color(153, 255, 255));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Department");

        jLabel6.setBackground(new java.awt.Color(153, 255, 255));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Instructor");

        jLabel7.setBackground(new java.awt.Color(153, 255, 255));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Schedule");

        jLabel8.setBackground(new java.awt.Color(153, 255, 255));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Location");

        jLabel9.setBackground(new java.awt.Color(153, 255, 255));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Capacity");

        txtCName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCNameActionPerformed(evt);
            }
        });

        CLEAR.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        CLEAR.setText("CLEAR");
        CLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CLEARActionPerformed(evt);
            }
        });

        Addbtn.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        Addbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/aaaCREATE.png"))); // NOI18N
        Addbtn.setText("CREATE");
        Addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddbtnActionPerformed(evt);
            }
        });

        SEARCH.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        SEARCH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/searchmagnifierinterfacesymbol_79894.png"))); // NOI18N
        SEARCH.setText("SEARCH");
        SEARCH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SEARCHActionPerformed(evt);
            }
        });

        UPDATE.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        UPDATE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/emblemsynchronizing_93485.png"))); // NOI18N
        UPDATE.setText("UPDATE");
        UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UPDATEActionPerformed(evt);
            }
        });

        DELETE.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        DELETE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/trash_bin_icon-icons.com_67981.png"))); // NOI18N
        DELETE.setText("DELETE");
        DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                            .addComponent(txtCre, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDep, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIns, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSched, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLoc)
                            .addComponent(txtCap, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCID))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(CLEAR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Addbtn)
                        .addGap(38, 38, 38)
                        .addComponent(SEARCH)
                        .addGap(34, 34, 34)
                        .addComponent(UPDATE)
                        .addGap(41, 41, 41)
                        .addComponent(DELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(169, 169, 169))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtCID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtCName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txtCre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtDep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtIns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(txtSched, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtCap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(CLEAR, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SEARCH)
                            .addComponent(Addbtn)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DELETE)
                            .addComponent(UPDATE))))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCNameActionPerformed
        
    }//GEN-LAST:event_txtCNameActionPerformed

    private void AddbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddbtnActionPerformed
       Connection conn = DBConnection.getConnection();
        if (conn != null) {
            try {
               
                String sqlID = "SELECT MAX(course_id) AS max_id FROM courses";
                PreparedStatement pstmtID = conn.prepareStatement(sqlID);
                ResultSet rsID = pstmtID.executeQuery();
                int course_id = 1;
                if (rsID.next()) {
                    course_id = rsID.getInt("max_id") + 1; 
                }
                pstmtID.close();

                String course_name = txtCName.getText();
                String credits = txtCre.getText();
                String department = txtDep.getText();
                String instructor = txtIns.getText();
                String  schedule = txtSched.getText();
                String location = txtLoc.getText();
                String capacity = txtCap.getText();

                
                if (course_name.isEmpty() || credits.isEmpty() || department.isEmpty() || 
                    instructor.isEmpty() || schedule.isEmpty() || location.isEmpty() || 
                    capacity.isEmpty()) {
                    
                    JOptionPane.showMessageDialog(this, "Please enter all text fields", "Try Again!", JOptionPane.ERROR_MESSAGE);
                    return;
                } else {
                    
                    DefaultTableModel model = (DefaultTableModel) CourseTable.getModel();
                    model.addRow(new Object[]{course_id, course_name, credits, department, instructor, schedule, location, capacity});

                    String sql = "INSERT INTO courses(course_id, course_name, credits, department, instructor, schedule, location, capacity) VALUES(?, ?, ?, ?, ?, ?, ?, ?)";
                    PreparedStatement pstmt = conn.prepareStatement(sql);
                    pstmt.setInt(1, course_id); 
                    pstmt.setString(2, course_name);
                    pstmt.setString(3, credits);
                    pstmt.setString(4, department);
                    pstmt.setString(5, instructor);
                    pstmt.setString(6, schedule);
                    pstmt.setString(7, location);
                    pstmt.setString(8, capacity);
                    pstmt.executeUpdate(); 

                    JOptionPane.showMessageDialog(this, "A new Course was added successfully!");
                    txtCID.setText("");
                    txtCName.setText("");
                    txtCre.setText("");
                    txtDep.setText("");
                    txtIns.setText("");
                    txtSched.setText("");
                    txtLoc.setText("");
                    txtCap.setText("");
                    pstmt.close();
                }
            } catch (SQLException e) {
                System.out.println("SQL Error: " + e.getMessage());
            } finally {
                DBConnection.closeConnection(conn);
         
            }
            
        }

    }//GEN-LAST:event_AddbtnActionPerformed

    private void CLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CLEARActionPerformed
        txtCID.setText("");
        txtCName.setText("");
        txtCre.setText("");
        txtDep.setText("");
        txtIns.setText("");
        txtSched.setText("");
        txtLoc.setText("");
        txtCap.setText("");
    }//GEN-LAST:event_CLEARActionPerformed

    private void SEARCHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SEARCHActionPerformed
        Connection conn =DBConnection.getConnection();
        if(conn !=null);
            try{
                String sql;
                PreparedStatement pstmt;
               
                if(txtCID.getText().trim().isEmpty()){
                    sql = "SELECT * FROM courses";
                    pstmt = conn.prepareStatement(sql);
                   
                }else{
                   
                    sql = "SELECT * FROM courses WHERE course_id = ?";
                    pstmt = conn.prepareStatement(sql);
                    pstmt.setInt(1,Integer.parseInt(txtCID.getText()));
                }

                ResultSet rs = pstmt.executeQuery();
               
                DefaultTableModel model = (DefaultTableModel)CourseTable.getModel();
                model.setRowCount(0);
               
                while(rs.next()){
                   
                    int course_id = rs.getInt("course_id");
                    String course_name = rs.getString("course_name");
                    String credits = rs.getString("credits");
                    String department = rs.getString("department");
                    String instructor = rs.getString("instructor");
                    String schedule = rs.getString("schedule");
                    String location = rs.getString("location");
                    String capacity = rs.getString("capacity");
                   
                    model.addRow(new Object[]{course_id, course_name, credits,department,instructor, schedule, location, capacity});
                   
                }
                rs.close();
                pstmt.close();
               
            }catch (SQLException e) {
                    System.out.println("SQL Error: " + e.getMessage());
            }finally {
                DBConnection.closeConnection(conn);
            }

    }//GEN-LAST:event_SEARCHActionPerformed

    private void DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETEActionPerformed
        int row = CourseTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "No row is selected! Please select a row", "Select row", JOptionPane.QUESTION_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this course?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            Connection conn = DBConnection.getConnection();
            if (conn != null) {
                try {
                    int course_id = (int) CourseTable.getValueAt(row, 0);
                    String sql = "DELETE FROM courses WHERE course_id = ?";
                    PreparedStatement pstmt = conn.prepareStatement(sql);
                    pstmt.setInt(1, course_id);
                    int rowsDeleted = pstmt.executeUpdate();
                    if (rowsDeleted > 0) {
                        DefaultTableModel model = (DefaultTableModel) CourseTable.getModel();
                        model.removeRow(row);
                        JOptionPane.showMessageDialog(this, "A Course was deleted successfully!");
                    } else {
                        JOptionPane.showMessageDialog(this, "No record found with the specified ID", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                    pstmt.close();
                } catch (SQLException e) {
                    System.out.println("SQL Error: " + e.getMessage());
                } finally {
                    DBConnection.closeConnection(conn);
                }
            }
        }
    }//GEN-LAST:event_DELETEActionPerformed

    private void UPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UPDATEActionPerformed
        Connection conn = DBConnection.getConnection();
        if (conn != null) {
            int row = CourseTable.getSelectedRow(); 
            if (row < 0) {
                // Show an error message if no row is selected
                JOptionPane.showMessageDialog(this, "No row is selected! Please select a row", "Select row", JOptionPane.ERROR_MESSAGE);
                return;
            }

            
            int course_id = (int) CourseTable.getValueAt(row, 0);
         
            String sql = "UPDATE courses SET course_name = ?, credits = ?, department = ?, instructor = ?, schedule = ?, location = ?, capacity = ? WHERE course_id = ?";
            try {
                PreparedStatement pstmt = conn.prepareStatement(sql);
                
                pstmt.setString(1, txtCName.getText());
                pstmt.setString(2, txtCre.getText());
                pstmt.setString(3, txtDep.getText());
                pstmt.setString(4, txtIns.getText());
                pstmt.setString(5, txtSched.getText());
                pstmt.setString(6, txtLoc.getText());
                pstmt.setString(7, txtCap.getText());
                pstmt.setInt(8, course_id); 

                int rowsUpdated = pstmt.executeUpdate(); 
                if (rowsUpdated > 0) {
                   
                    JOptionPane.showMessageDialog(this, "A Course was updated successfully!");
                    
                  
                    DefaultTableModel model = (DefaultTableModel) CourseTable.getModel();
                    model.removeRow(row);
                 
                    model.addRow(new Object[]{course_id, txtCName.getText(), txtCre.getText(), txtDep.getText(), txtIns.getText(), txtSched.getText(), txtLoc.getText(), txtCap.getText()});
                    
                    txtCID.setText("");
                    txtCName.setText("");
                    txtCre.setText("");
                    txtDep.setText("");
                    txtIns.setText("");
                    txtSched.setText("");
                    txtLoc.setText("");
                    txtCap.setText("");
                } else {
                    
                    JOptionPane.showMessageDialog(this, "No record found with the specified ID", "Error", JOptionPane.ERROR_MESSAGE);
                }
                pstmt.close();
            } catch (SQLException e) {
                
                System.out.println("SQL Error: " + e.getMessage());
            } finally {
               
                DBConnection.closeConnection(conn);
            }
        }      
    }//GEN-LAST:event_UPDATEActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CourseManagementSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CourseManagementSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CourseManagementSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CourseManagementSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CourseManagementSystem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Addbtn;
    private javax.swing.JButton CLEAR;
    private javax.swing.JTable CourseTable;
    private javax.swing.JButton DELETE;
    private javax.swing.JButton SEARCH;
    private javax.swing.JButton UPDATE;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCID;
    private javax.swing.JTextField txtCName;
    private javax.swing.JTextField txtCap;
    private javax.swing.JTextField txtCre;
    private javax.swing.JTextField txtDep;
    private javax.swing.JTextField txtIns;
    private javax.swing.JTextField txtLoc;
    private javax.swing.JTextField txtSched;
    // End of variables declaration//GEN-END:variables

}
